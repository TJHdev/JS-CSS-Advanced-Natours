.popup {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba($color-black, 0.85);
  z-index: 2500;

  opacity: 0;
  visibility: hidden;
  transition: all .3s;

  &__content {
    @include center-position;
    
    // z index and position fixed are not required here because the parent element has both of those properties, __content will automatically be rendered above and fixed because of the parent elements properties
    width: 75%;
    background-color: $color-white; 
    -webkit-box-shadow: 0 2rem 4rem rgba($color-black, .4); 
            box-shadow: 0 2rem 4rem rgba($color-black, .4);
    border-radius: 3px;
    display: table;
    overflow: hidden;

    opacity: 0;
    transform: translate(-50%, -50%) scale(0.25); // transform properties overwrite each other, the one inside the center-position mixin gets overwritten.
    transition: all .4s .2s; // 3rd argument is a delay
  }

  &__left {
    width: 33.333333%;
    display: table-cell;
    
  }

  &__right {
    width: 66.666667%;
    display: table-cell;
    vertical-align: middle; // different way of putting elements next to one - another;
    padding: 3rem 5rem;
  }

  &__img {
    display: block;
    width: 100%;
  }

  &__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;

    -webkit-column-count: 2;

            column-count: 2; // new browser features for seperating text
    -webkit-column-gap: 4rem;
            column-gap: 4rem;
    -webkit-column-rule: 1px solid $color-grey-light-2;
            column-rule: 1px solid $color-grey-light-2; // like border

    -webkit-hyphens: auto;
    -ms-hyphens: auto;
    hyphens: auto; // places hyphens in the text for you, remember to set in the html file <html lang="en"> note: this is currently not supported on chrome for windows.
  }

  // Open states
  &:target {
    opacity: 1;
    visibility: visible; //When the anchor (a) is clicked #popup gets added to the url of the page. Using the property target listens for when the id value gets added to the target
  }

  &:target &__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }

  &__close {
    &:link,
    &:visited {
      color: $color-grey-dark;
      position: absolute;
      top: 2.5rem;
      right: 2.5rem;
      font-size: 3rem;
      text-decoration: none;
      display: inline-block;
      transition: all .2s;
      line-height: .5; // if element is tall for some reason check this property
    }

    &:hover {
      color: $color-primary;
    }
  }
}